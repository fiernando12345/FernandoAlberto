
import java.io.IOException;
import java.util.Calendar;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Fernando Alberto
 */
public class Menu extends javax.swing.JFrame {

    static DefaultTableModel modeloTabla = new DefaultTableModel();
    static DefaultCategoryDataset DatosGananciaMes= new DefaultCategoryDataset();
    static DefaultCategoryDataset DatosVentaMes= new DefaultCategoryDataset();
    static DefaultCategoryDataset DatosComprasMes= new DefaultCategoryDataset();
    static DefaultCategoryDataset DatosGananciaAño= new DefaultCategoryDataset();
    static DefaultCategoryDataset DatosVentaAño= new DefaultCategoryDataset();
    static DefaultCategoryDataset DatosComprasAaño= new DefaultCategoryDataset();
    Calendar cal=Calendar.getInstance(); 
    
    public Menu() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiSubidas = new javax.swing.JMenuItem();
        jmiAgregarMas = new javax.swing.JMenuItem();
        jmiBajas = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jrbmAlmacen = new javax.swing.JRadioButtonMenuItem();
        jrdmVentas = new javax.swing.JRadioButtonMenuItem();
        jmGraficar = new javax.swing.JMenu();
        jmiGrafcarGganancias = new javax.swing.JMenuItem();
        jmiGrafcarVentas = new javax.swing.JMenuItem();
        jmiGraficarCompras = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jtTabla.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtTabla.setEnabled(false);
        jtTabla.setRowHeight(30);
        jScrollPane1.setViewportView(jtTabla);

        jMenu1.setText("Compra/Venta");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N

        jmiSubidas.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jmiSubidas.setText("Agregar a Almacen (Subidas)");
        jmiSubidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSubidasActionPerformed(evt);
            }
        });
        jMenu1.add(jmiSubidas);

        jmiAgregarMas.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jmiAgregarMas.setText("Agregar mas de un producto");
        jmiAgregarMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAgregarMasActionPerformed(evt);
            }
        });
        jMenu1.add(jmiAgregarMas);

        jmiBajas.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jmiBajas.setText("Vender producto (Bajas)");
        jmiBajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiBajasActionPerformed(evt);
            }
        });
        jMenu1.add(jmiBajas);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Tabla");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N

        buttonGroup1.add(jrbmAlmacen);
        jrbmAlmacen.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jrbmAlmacen.setSelected(true);
        jrbmAlmacen.setText("Visualizar Almacen");
        jrbmAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbmAlmacenActionPerformed(evt);
            }
        });
        jMenu2.add(jrbmAlmacen);

        buttonGroup1.add(jrdmVentas);
        jrdmVentas.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jrdmVentas.setText("Visualizar Ventas");
        jrdmVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrdmVentasActionPerformed(evt);
            }
        });
        jMenu2.add(jrdmVentas);

        jMenuBar1.add(jMenu2);

        jmGraficar.setText("Graficar");
        jmGraficar.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N

        jmiGrafcarGganancias.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jmiGrafcarGganancias.setText("Graficar Ganancias");
        jmiGrafcarGganancias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGrafcarGgananciasActionPerformed(evt);
            }
        });
        jmGraficar.add(jmiGrafcarGganancias);

        jmiGrafcarVentas.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jmiGrafcarVentas.setText("Graficar Ventas");
        jmiGrafcarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGrafcarVentasActionPerformed(evt);
            }
        });
        jmGraficar.add(jmiGrafcarVentas);

        jmiGraficarCompras.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jmiGraficarCompras.setText("Graficar Compras a proveedores");
        jmiGraficarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGraficarComprasActionPerformed(evt);
            }
        });
        jmGraficar.add(jmiGraficarCompras);

        jMenuBar1.add(jmGraficar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        try {
            Principal.LeerTodo();
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(Principal.ArrayInventario.size()==0){
            jmiAgregarMas.setVisible(false);
            jmiBajas.setVisible(false);
        }else{
            jmiBajas.setVisible(true);
            jmiAgregarMas.setVisible(true);
        }
        if(Principal.ArrayInventario.size()>0 && (Principal.ArrayVentas.size()>0)){
            jmGraficar.setVisible(true);
        }else{
            jmGraficar.setVisible(false);
        }
        if(jrbmAlmacen.isSelected()){
        try{
        Object[] obj= new Object[5];
        obj[0]= "Proveedor";
        obj[1]= "Producto";
        obj[2]= "Cantidad";
        obj[3]= "Precio Unitario";
        obj[4]= "Fecha";
        modeloTabla = new DefaultTableModel(obj, Principal.ArrayInventario.size());
        for(int x=0; x<Principal.ArrayInventario.size(); x++){
        jtTabla.setModel(modeloTabla);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getProveedor(), x, 0);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getProducto(), x, 1);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getCantidad(), x, 2);
        jtTabla.setValueAt("$" + Principal.ArrayInventario.get(x).getPrecioUnitario(), x, 3);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getFecha(), x, 4);
        }
        }catch(Exception e){}
        }
        if(jrdmVentas.isSelected()){
        try{
        Object[] obj= new Object[6];
        obj[0]= "Cliente";
        obj[1]= "Fecha";
        obj[2]= "Producto";
        obj[3]= "Cantidad";
        obj[4]= "IVA";
        obj[5]= "Total";
        modeloTabla = new DefaultTableModel(obj, Principal.ArrayVentas.size());
        for(int x=0; x<Principal.ArrayVentas.size(); x++){
        jtTabla.setModel(modeloTabla);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getCliente(), x, 0);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getFecha(), x, 1);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getProducto(), x, 2);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getCantidad(), x, 3);
        jtTabla.setValueAt("$" + Principal.ArrayVentas.get(x).getIVA(), x, 4);
        jtTabla.setValueAt("$" + Principal.ArrayVentas.get(x).getTotal(), x, 5);
        }
        }catch(Exception e){}
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void jmiSubidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSubidasActionPerformed
        Comprar_Subidas conector= new Comprar_Subidas();
        conector.setVisible(true);
        conector.setTitle("Realizar Compra");
    }//GEN-LAST:event_jmiSubidasActionPerformed

    private void jmiBajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiBajasActionPerformed
        Venta_Bajadas conector= new Venta_Bajadas();
        conector.setVisible(true);
        conector.setTitle("Realizar Venta");
    }//GEN-LAST:event_jmiBajasActionPerformed

    private void jrdmVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrdmVentasActionPerformed
        if(Principal.ArrayVentas.size()==0){
            jrbmAlmacen.setSelected(true);
            JOptionPane.showMessageDialog(null, "No hay ventas");
        }
        try{
        Object[] obj= new Object[6];
        obj[0]= "Cliente";
        obj[1]= "Fecha";
        obj[2]= "Producto";
        obj[3]= "Cantidad";
        obj[4]= "IVA";
        obj[5]= "Total";
        modeloTabla = new DefaultTableModel(obj, Principal.ArrayVentas.size());
        for(int x=0; x<Principal.ArrayVentas.size(); x++){
        jtTabla.setModel(modeloTabla);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getCliente(), x, 0);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getFecha(), x, 1);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getProducto(), x, 2);
        jtTabla.setValueAt(Principal.ArrayVentas.get(x).getCantidad(), x, 3);
        jtTabla.setValueAt("$" + Principal.ArrayVentas.get(x).getIVA(), x, 4);
        jtTabla.setValueAt("$" + Principal.ArrayVentas.get(x).getTotal(), x, 5);
        }
        }catch(Exception e){JOptionPane.showMessageDialog(null, "No se pudo visualizar las Ventas");}
    }//GEN-LAST:event_jrdmVentasActionPerformed

    private void jrbmAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbmAlmacenActionPerformed
        if(Principal.ArrayInventario.size()==0){
            JOptionPane.showMessageDialog(null, "No hay nada en el inventario");
        }
        try{
        Object[] obj= new Object[5];
        obj[0]= "Proveedor";
        obj[1]= "Producto";
        obj[2]= "Cantidad";
        obj[3]= "Precio Unitario";
        obj[4]= "Fecha";
        modeloTabla = new DefaultTableModel(obj, Principal.ArrayInventario.size());
        for(int x=0; x<Principal.ArrayInventario.size(); x++){
        jtTabla.setModel(modeloTabla);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getProveedor(), x, 0);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getProducto(), x, 1);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getCantidad(), x, 2);
        jtTabla.setValueAt("$" + Principal.ArrayInventario.get(x).getPrecioUnitario(), x, 3);
        jtTabla.setValueAt(Principal.ArrayInventario.get(x).getFecha(), x, 4);
        }
        }catch(Exception e){JOptionPane.showMessageDialog(null, "No se pudo visualizar el Almacen");}
    }//GEN-LAST:event_jrbmAlmacenActionPerformed

    private void jmiAgregarMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAgregarMasActionPerformed
        Modificar_Producto conector= new Modificar_Producto();
        conector.setVisible(true);
        conector.setTitle("Modificar Producto");
    }//GEN-LAST:event_jmiAgregarMasActionPerformed

    private void jmiGrafcarGgananciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGrafcarGgananciasActionPerformed
        int dia= cal.get(cal.DATE);
        int mes= (cal.get(cal.MONTH)+1);
        int año= cal.get(cal.YEAR);
        for(int x=0; x<Principal.ArrayVentas.size(); x++){
         String strDatos=Principal.ArrayVentas.get(x).getFecha();
	 StringTokenizer tokens=new StringTokenizer(strDatos, "/");
           int diaarray= Integer.parseInt(tokens.nextToken());
           int mesarray= Integer.parseInt(tokens.nextToken());
           int añoarray= Integer.parseInt(tokens.nextToken());
           if(año==añoarray){
           DatosGananciaAño.addValue(Principal.ArrayVentas.get(x).getTotal(), Principal.ArrayVentas.get(x).getProducto(), Principal.ArrayVentas.get(x).getProducto());
           }
           if(mes==mesarray){
               DatosGananciaMes.addValue(Principal.ArrayVentas.get(x).getTotal(), Principal.ArrayVentas.get(x).getProducto(), Principal.ArrayVentas.get(x).getProducto());
           }
        Object[] options = {"Mes","Año"};
        int n = JOptionPane.showOptionDialog(null, "Graficar por Mes o por Año","Graficar Ganancias",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.DEFAULT_OPTION,null,options,options[0]);
        if(n==0){  
         JFreeChart graficarGananciasMES= ChartFactory.createBarChart3D("Ganancia", "Producto", "Ganancias del mes", DatosGananciaMes, PlotOrientation.VERTICAL, true, true, false);
           ChartPanel contenedorGananciasMes= new ChartPanel(graficarGananciasMES);
        JFrame ventanaGananciasMes= new JFrame("Ganancias por Mes");
        ventanaGananciasMes.add(contenedorGananciasMes);
        ventanaGananciasMes.setSize(800,500);
        ventanaGananciasMes.setVisible(true);
        }else if(n==1){
         JFreeChart graficarGananciasAño= ChartFactory.createBarChart3D("Ganancia", "Producto", "Ganancias del año", DatosGananciaMes, PlotOrientation.VERTICAL, true, true, false);
           ChartPanel contenedorGananciasAño= new ChartPanel(graficarGananciasAño);
        JFrame ventanaGananciasAño= new JFrame("Ganancias por Año (" + año + ")");
        ventanaGananciasAño.add(contenedorGananciasAño);
        ventanaGananciasAño.setSize(800,500);
        ventanaGananciasAño.setVisible(true);
        }else{
    System.out.println("no option choosen");
        }
        }
    }//GEN-LAST:event_jmiGrafcarGgananciasActionPerformed

    private void jmiGrafcarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGrafcarVentasActionPerformed
        int dia= cal.get(cal.DATE);
        int mes= (cal.get(cal.MONTH)+1);
        int año= cal.get(cal.YEAR);
        for(int x=0; x<Principal.ArrayVentas.size(); x++){
         String strDatos=Principal.ArrayVentas.get(x).getFecha();
	 StringTokenizer tokens=new StringTokenizer(strDatos, "/");
           int diaarray= Integer.parseInt(tokens.nextToken());
           int mesarray= Integer.parseInt(tokens.nextToken());
           int añoarray= Integer.parseInt(tokens.nextToken());
           if(año==añoarray){
           DatosVentaAño.addValue(Principal.ArrayVentas.get(x).getCantidad(), Principal.ArrayVentas.get(x).getProducto(), Principal.ArrayVentas.get(x).getProducto());
           }
           if(mes==mesarray){
               DatosVentaMes.addValue(Principal.ArrayVentas.get(x).getCantidad(), Principal.ArrayVentas.get(x).getProducto(), Principal.ArrayVentas.get(x).getProducto());
           }
            Object[] options = {"Mes","Año"};
        int n = JOptionPane.showOptionDialog(null, "Graficar por Mes o por Año","Graficar Ventas",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.DEFAULT_OPTION,null,options,options[0]);  
        if(n==0){  
         JFreeChart graficarVentasMES= ChartFactory.createBarChart3D("Cantidad", "Producto", "Cantidades del mes", DatosVentaMes, PlotOrientation.VERTICAL, true, true, false);
           ChartPanel contenedorVentasMes= new ChartPanel(graficarVentasMES);
        JFrame ventanaCantidadMes= new JFrame("Cantidades por Mes");
        ventanaCantidadMes.add(contenedorVentasMes);
        ventanaCantidadMes.setSize(800,500);
        ventanaCantidadMes.setVisible(true);
        }else if(n==1){
         JFreeChart graficarVentasAño= ChartFactory.createBarChart3D("Cantidad", "Producto", "Cantidades del año", DatosVentaAño, PlotOrientation.VERTICAL, true, true, false);
           ChartPanel contenedorVentasAño= new ChartPanel(graficarVentasAño);
        JFrame ventanaCantidadAño= new JFrame("Cantidades por Año (" + año + ")");
        ventanaCantidadAño.add(contenedorVentasAño);
        ventanaCantidadAño.setSize(800,500);
        ventanaCantidadAño.setVisible(true);
        }else{
    System.out.println("no option choosen");
        }
        }
    }//GEN-LAST:event_jmiGrafcarVentasActionPerformed

    private void jmiGraficarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGraficarComprasActionPerformed
        int dia= cal.get(cal.DATE);
        int mes= (cal.get(cal.MONTH)+1);
        int año= cal.get(cal.YEAR);
        for(int x=0; x<Principal.ArrayInventario.size(); x++){
         String strDatos=Principal.ArrayInventario.get(x).getFecha();
	 StringTokenizer tokens=new StringTokenizer(strDatos, "/");
           int diaarray= Integer.parseInt(tokens.nextToken());
           int mesarray= Integer.parseInt(tokens.nextToken());
           int añoarray= Integer.parseInt(tokens.nextToken());
           if(año==añoarray){
           DatosComprasAaño.addValue(Principal.ArrayInventario.get(x).getCantidad(), Principal.ArrayInventario.get(x).getProveedor(), Principal.ArrayInventario.get(x).getProveedor());
           }
           if(mes==mesarray){
               DatosComprasMes.addValue(Principal.ArrayInventario.get(x).getCantidad(), Principal.ArrayInventario.get(x).getProveedor(), Principal.ArrayInventario.get(x).getProveedor());
           }
           Object[] options = {"Mes","Año"};
        int n = JOptionPane.showOptionDialog(null, "Graficar por Mes o por Año","Graficar Ventas",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.DEFAULT_OPTION,null,options,options[0]);  
        if(n==0){  
         JFreeChart graficarComprasMes= ChartFactory.createBarChart3D("Cantidad", "Proveedor", "Proveedores al mes", DatosComprasMes, PlotOrientation.VERTICAL, true, true, false);
           ChartPanel contenedorComprasMes= new ChartPanel(graficarComprasMes);
        JFrame ventanaComprasMes= new JFrame("Proveedores por Mes");
        ventanaComprasMes.add(contenedorComprasMes);
        ventanaComprasMes.setSize(800,500);
        ventanaComprasMes.setVisible(true);
        }else if(n==1){
         JFreeChart graficarComprasAño= ChartFactory.createBarChart3D("Cantidad", "Proveedor", "Proveedores al Año", DatosComprasAaño, PlotOrientation.VERTICAL, true, true, false);
           ChartPanel contenedorComprasAño= new ChartPanel(graficarComprasAño);
        JFrame ventanaComprasAño= new JFrame("Proveedores por Año (" + año + ")");
        ventanaComprasAño.add(contenedorComprasAño);
        ventanaComprasAño.setSize(800,500);
        ventanaComprasAño.setVisible(true);
        }else{
    System.out.println("no option choosen");
        }
        }
    }//GEN-LAST:event_jmiGraficarComprasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu jmGraficar;
    private javax.swing.JMenuItem jmiAgregarMas;
    private javax.swing.JMenuItem jmiBajas;
    private javax.swing.JMenuItem jmiGrafcarGganancias;
    private javax.swing.JMenuItem jmiGrafcarVentas;
    private javax.swing.JMenuItem jmiGraficarCompras;
    private javax.swing.JMenuItem jmiSubidas;
    private javax.swing.JRadioButtonMenuItem jrbmAlmacen;
    private javax.swing.JRadioButtonMenuItem jrdmVentas;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables
}
